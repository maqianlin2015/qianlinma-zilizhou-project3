{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/-zilizhou-qianlinma-project3/src/JobDetails.jsx\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UserNavBar from './UserNavBar';\nimport \"./style/Job.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const jobId = useParams().jobId;\n  const [job, setJob] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n  const navigate = useNavigate();\n  const state = useSelector(state => state);\n  const username = useSelector(state => state.username);\n  const [isFavorited, setIsFavorited] = useState();\n  const [myfavoriteJobsListID, setMyFavoriteJobsListID] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n\n  function checkLogin() {\n    axios.get('/api/users/whoIsLoggedIn').then(response => {\n      setCurrentUserName(response.data);\n    }) // .catch(() => navigate('/login'))\n    .catch(() => setIsLoggedIn(false));\n  } // // myfavorite中来的另一种写法：\n  // function getUserFavoriteJobIDList() {\n  //     axios.get('/api/users/findMyFavorites/' + username)\n  //         .then(response => {\n  //             setMyFavoriteJobsListID(response.data);\n  //         })\n  //         .catch(error => console.error(error));\n  // }\n  // useEffect(getUserFavoriteJobIDList, []);\n  // setTimeout(() => {\n  //     for (let id of myfavoriteJobsListID) {\n  //         console.log(id);\n  //         if (jobId == id) {\n  //             setIsFavorited(true);\n  //         } else {\n  //             setIsFavorited(false);\n  //         }\n  //     }\n  // }, 500)\n  // function findJobDetails() {\n  //     axios.get('/api/jobs/find/findById/' + jobId)\n  //         .then(response => setJob(response.data))\n  //         .catch(error => console.log(\"Could not find Job\"));\n  // }\n  // useEffect(findJobDetails, []);\n  // const favoriteButtonComponent = (isFavorited) ?\n  //     (<>\n  //         <button> Unfavorite</button>\n  //     </>)\n  //     : (<>\n  //         <button\n  //             onClick={() => {\n  //                 axios.post('/api/users/addMyFavoriteJob/' + username, jobId)\n  //                     .then((response) => {\n  //                         console.log(response);\n  //                         setIsFavorited(!isFavorited);\n  //                     })\n  //                     .catch((error) => console.log(error))\n  //             }}\n  //         > Favorite</button>\n  //     </>);\n  // const funcComp = (currentUserName == state.jobOwner) ?\n  //     (<>\n  //         <button\n  //             onClick={() => {\n  //                 axios.post('/api/jobs/delete/' + jobId)\n  //                     .then((response) => {\n  //                         console.log(\"Success delete!\");\n  //                         navigate('/jobSearch')\n  //                     })\n  //                     .catch((error) => console.log(error))\n  //             }}\n  //         >Delete</button>\n  //         <button onClick={() => navigate('/editJob/' + jobId)}>Edit</button>\n  //     </>)\n  //     : (<></>);\n\n\n  const jobDetailComponent = job ? job.map(j => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }, this), \" \", j.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }, this), \" \", j.companyName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this), \" \", j.location, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }, this), \" \", j.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Employer Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"mailto:m.bluth@example.com\",\n          children: j.employerEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), j.companyLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Company Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 42\n        }, this), j.companyLink, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Post Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }, this), \" \", j.postdate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" No Job found \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"favoriate_result\",\n      children: \"Details: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), jobDetailComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/-zilizhou-qianlinma-project3/src/JobDetails.jsx"],"names":["axios","React","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","UserNavBar","jobId","job","setJob","currentUserName","setCurrentUserName","currentUser","setCurrentUser","navigate","state","username","isFavorited","setIsFavorited","myfavoriteJobsListID","setMyFavoriteJobsListID","isLoggedIn","setIsLoggedIn","checkLogin","get","then","response","data","catch","jobDetailComponent","map","j","title","companyName","location","description","employerEmail","companyLink","postdate"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UserNavBar from './UserNavBar';\nimport \"./style/Job.css\";\n\nexport default function () {\n    const jobId = useParams().jobId;\n    const [job, setJob] = useState(null);\n    const [currentUserName, setCurrentUserName] = useState('');\n    const [currentUser, setCurrentUser] = useState('');\n    const navigate = useNavigate();\n    const state = useSelector((state) => state);\n    const username = useSelector(state => state.username);\n    const [isFavorited, setIsFavorited] = useState();\n    const [myfavoriteJobsListID, setMyFavoriteJobsListID] = useState([]);\n    const [isLoggedIn, setIsLoggedIn] = useState([]);\n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then((response) => {\n                setCurrentUserName(response.data);\n            })\n            // .catch(() => navigate('/login'))\n            .catch(() => setIsLoggedIn(false))\n    }\n\n    // // myfavorite中来的另一种写法：\n    // function getUserFavoriteJobIDList() {\n    //     axios.get('/api/users/findMyFavorites/' + username)\n    //         .then(response => {\n    //             setMyFavoriteJobsListID(response.data);\n    //         })\n    //         .catch(error => console.error(error));\n    // }\n\n    // useEffect(getUserFavoriteJobIDList, []);\n\n    // setTimeout(() => {\n    //     for (let id of myfavoriteJobsListID) {\n    //         console.log(id);\n    //         if (jobId == id) {\n    //             setIsFavorited(true);\n    //         } else {\n    //             setIsFavorited(false);\n    //         }\n    //     }\n    // }, 500)\n\n\n    // function findJobDetails() {\n    //     axios.get('/api/jobs/find/findById/' + jobId)\n    //         .then(response => setJob(response.data))\n    //         .catch(error => console.log(\"Could not find Job\"));\n    // }\n\n\n    // useEffect(findJobDetails, []);\n\n    // const favoriteButtonComponent = (isFavorited) ?\n    //     (<>\n    //         <button> Unfavorite</button>\n    //     </>)\n    //     : (<>\n    //         <button\n    //             onClick={() => {\n    //                 axios.post('/api/users/addMyFavoriteJob/' + username, jobId)\n    //                     .then((response) => {\n    //                         console.log(response);\n    //                         setIsFavorited(!isFavorited);\n    //                     })\n    //                     .catch((error) => console.log(error))\n    //             }}\n    //         > Favorite</button>\n    //     </>);\n\n\n\n\n    // const funcComp = (currentUserName == state.jobOwner) ?\n    //     (<>\n    //         <button\n    //             onClick={() => {\n    //                 axios.post('/api/jobs/delete/' + jobId)\n    //                     .then((response) => {\n    //                         console.log(\"Success delete!\");\n    //                         navigate('/jobSearch')\n    //                     })\n    //                     .catch((error) => console.log(error))\n    //             }}\n    //         >Delete</button>\n    //         <button onClick={() => navigate('/editJob/' + jobId)}>Edit</button>\n    //     </>)\n    //     : (<></>);\n\n    const jobDetailComponent = job ?\n    (\n        job.map(j => {\n            return (<>\n            \n                <div> <b>Job Title:</b> {j.title} </div>\n                <div> <b>Company:</b> {j.companyName} </div>     \n                <div> <b>Location:</b> {j.location} </div>     \n                <div> <b>Description:</b> {j.description}</div>     \n                <div> <b>Employer Email:</b> <a href=\"mailto:m.bluth@example.com\">{j.employerEmail}</a> </div>     \n                {j.companyLink  && <div> <b>Company Link:</b>{j.companyLink} </div>}     \n                <div> <b>Post Date:</b> {j.postdate} </div>     \n                \n            </>)\n        }) \n    ) :\n        (<div> No Job found </div>);\n\n        return (\n            <div>\n                {/*之后一定改成global */}\n                <UserNavBar />\n                <h1 className=\"favoriate_result\">Details: </h1>\n                {/* <section id=\"job-detail\"> */}\n                {jobDetailComponent}\n                {/* {favoriteButtonComponent}\n                {funcComp} */}\n                {/* </section> */}\n            </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}