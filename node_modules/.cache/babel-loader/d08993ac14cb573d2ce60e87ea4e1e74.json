{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AddJob.jsx\",\n    _s = $RefreshSig$();\n\n// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router';\n// export default function AddJob(props) {\n//     const navigate = useNavigate();\n//     const [jobForm, setJobForm] = useState({\n//         title: '',\n//         location: '',\n//         companyName: '',\n//         description: '',\n//         employerEmail: '',\n//         companyLink: '',\n//         postdate: '',\n//     });\n//     const [myJob, setMyJob] = useState([])\n//     function getMyJob() {\n//         axios.get('/api/job/myjob')\n//             .then(response => setMyJob(response.data))\n//             .catch(error => console.log(error));\n//     }\n//     useEffect(getMyJob, []);\n//     const jobElement = [];\n//     for (let job of myJob) {\n//         jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n//     }\n//     return (\n//         <div>\n//             <h5>Title:</h5>\n//             <input value={jobForm.title}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     title: e.target.value\n//                 })} ></input>\n//             <h5>Location:</h5>\n//             <input value={jobForm.location}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     location: e.target.value\n//                 })} ></input>\n//             <h5>Company Name:</h5>\n//             <input value={jobForm.companyName}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     companyName: e.target.value\n//                 })} ></input>\n//             <h5>Description:</h5>\n//             <input value={jobForm.description}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     description: e.target.value\n//                 })} ></input>\n//             <h5>EmployerEmail:</h5>\n//             <input value={jobForm.employerEmail}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     employerEmail: e.target.value\n//                 })} ></input>\n//             <h5>Company Link:</h5>\n//             <input value={jobForm.companyLink}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     companyLink: e.target.value\n//                 })} ></input>\n//             <h5> Post Date:</h5>\n//             <input value={jobForm.postdate}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     postdate: e.target.value\n//                 })} ></input>\n//             <button onClick={\n//                 () => axios.post('/api/jobs/createJob/', jobForm)\n//                     .then(response => {\n//                         getMyJob()\n//                         console.log(response)\n//                     })\n//                     .catch(error => console.error(error))\n//             }>\n//                 Submit\n//             </button>\n//             {jobElement}\n//         </div>\n//     )\n// }\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddJob(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [jobForm, setJobForm] = useState({\n    title: '',\n    location: '',\n    companyName: '',\n    description: '',\n    employerEmail: '',\n    companyLink: '',\n    postdate: ''\n  });\n  const [myJob, setMyJob] = useState([]);\n\n  function getMyJob() {\n    axios.get('/api/job/myjob').then(response => setMyJob(response.data)).catch(error => console.log(error));\n  }\n\n  const [myPokemon, setMyPokemon] = useState([]); // 用axios making api request to local node server    \n  // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n  // promise is Java scripts way of doing asynchronous data handling.\n  // 既然promise回来了，我要access to this data and use it\n  // axios有一个async问题\n\n  function getMyPokemon() {\n    axios.get('/api/pokemon/myPokemon').then(response => setMyPokemon(response.data)).catch(error => console.log(error)); // console.log(\"aynsc\");\n    // esponse.datashi yi obj\n  }\n\n  function checkLogin() {\n    axios.get('/api/users/whoIsLoggedIn').then(() => console.log(\"Success\")).catch(() => navigate('/'));\n  } // 如没有login，就来主页了\n\n\n  useEffect(checkLogin, []);\n  useEffect(getMyPokemon, []);\n  const pokemonElement = [];\n\n  for (let pokemon of myPokemon) {\n    pokemonElement.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pokemon.name, \" - \", pokemon.health, \" - \", pokemon.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Pokemon Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.name,\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.type,\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        type: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Health:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.health,\n      type: \"number\",\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        health: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => axios.post('/api/pokemon/create', pokemonForm).then(response => {\n        getMyPokemon();\n        console.log(response);\n      }).catch(error => console.error(error)),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), pokemonElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddJob, \"CvG7FlYvvcLDkfEF8Ix9T41CU7U=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AddJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","AddJob","props","navigate","jobForm","setJobForm","title","location","companyName","description","employerEmail","companyLink","postdate","myJob","setMyJob","getMyJob","get","then","response","data","catch","error","console","log","myPokemon","setMyPokemon","getMyPokemon","checkLogin","pokemonElement","pokemon","push","name","health","type","pokemonForm","e","setPokemonForm","target","value","post"],"mappings":"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","sourcesContent":["// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router';\n\n// export default function AddJob(props) {\n//     const navigate = useNavigate();\n//     const [jobForm, setJobForm] = useState({\n//         title: '',\n//         location: '',\n//         companyName: '',\n//         description: '',\n//         employerEmail: '',\n//         companyLink: '',\n//         postdate: '',\n//     });\n//     const [myJob, setMyJob] = useState([])\n\n//     function getMyJob() {\n//         axios.get('/api/job/myjob')\n//             .then(response => setMyJob(response.data))\n//             .catch(error => console.log(error));\n//     }\n\n\n//     useEffect(getMyJob, []);\n\n\n//     const jobElement = [];\n//     for (let job of myJob) {\n//         jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n//     }\n\n\n//     return (\n//         <div>\n//             <h5>Title:</h5>\n//             <input value={jobForm.title}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     title: e.target.value\n//                 })} ></input>\n//             <h5>Location:</h5>\n//             <input value={jobForm.location}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     location: e.target.value\n//                 })} ></input>\n//             <h5>Company Name:</h5>\n//             <input value={jobForm.companyName}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     companyName: e.target.value\n//                 })} ></input>\n\n//             <h5>Description:</h5>\n//             <input value={jobForm.description}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     description: e.target.value\n//                 })} ></input>\n\n//             <h5>EmployerEmail:</h5>\n//             <input value={jobForm.employerEmail}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     employerEmail: e.target.value\n//                 })} ></input>\n\n//             <h5>Company Link:</h5>\n//             <input value={jobForm.companyLink}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     companyLink: e.target.value\n//                 })} ></input>\n\n//             <h5> Post Date:</h5>\n//             <input value={jobForm.postdate}\n//                 onChange={e => setJobForm({\n//                     ...jobForm,\n//                     postdate: e.target.value\n//                 })} ></input>\n\n//             <button onClick={\n//                 () => axios.post('/api/jobs/createJob/', jobForm)\n//                     .then(response => {\n//                         getMyJob()\n//                         console.log(response)\n//                     })\n//                     .catch(error => console.error(error))\n//             }>\n//                 Submit\n//             </button>\n//             {jobElement}\n//         </div>\n//     )\n\n\n// }\n\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n\n\n    const [myJob, setMyJob] = useState([])\n\n    function getMyJob() {\n        axios.get('/api/job/myjob')\n            .then(response => setMyJob(response.data))\n            .catch(error => console.log(error));\n    }\n\n\n\n\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    // 如没有login，就来主页了\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}