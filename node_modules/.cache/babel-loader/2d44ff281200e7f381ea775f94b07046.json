{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/-zilizhou-qianlinma-project3/src/EditJob.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditJob(props) {\n  _s();\n\n  const jobId = useParams().jobId;\n  const state = useSelector(state => state);\n  const username = useSelector(state => state.username);\n  const navigate = useNavigate();\n  const [job, setJob] = useState([]);\n  const [jobForm, setJobForm] = useState({\n    id: jobId,\n    title: '',\n    location: '',\n    companyName: '',\n    description: '',\n    employerEmail: '',\n    companyLink: '',\n    postdate: '',\n    owner: username\n  });\n\n  function checkLogin() {\n    axios.get('/api/users/whoIsLoggedIn').then(() => console.log(\"Success Login\")).catch(() => navigate('/'));\n  }\n\n  useEffect(checkLogin, []);\n\n  function findJobDetails() {\n    axios.get('/api/jobs/find/findById/' + jobId).then(response => setJobForm(response.data[0])).catch(error => console.log(\"Could not find Job\"));\n  }\n\n  useEffect(findJobDetails, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"job-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit My Posting: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.title,\n          onChange: e => setJobForm({ ...jobForm,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.location,\n          onChange: e => setJobForm({ ...jobForm,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Company Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.companyName,\n          onChange: e => setJobForm({ ...jobForm,\n            companyName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.description,\n          onChange: e => setJobForm({ ...jobForm,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"EmployerEmail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.employerEmail,\n          onChange: e => setJobForm({ ...jobForm,\n            employerEmail: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Company Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: jobForm.companyLink,\n          onChange: e => setJobForm({ ...jobForm,\n            companyLink: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn\",\n        onClick: () => axios.post('/api/jobs/update/' + jobId, jobForm).then(response => {\n          console.log(response);\n          navigate('/job/' + jobId);\n        }).catch(error => console.error(error)),\n        children: \"Submit Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditJob, \"R5mvoexYaYbSZeR1xanFNZ9Vqss=\", false, function () {\n  return [useParams, useSelector, useSelector, useNavigate];\n});\n\n_c = EditJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditJob\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/-zilizhou-qianlinma-project3/src/EditJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","useParams","useSelector","useDispatch","EditJob","props","jobId","state","username","navigate","job","setJob","jobForm","setJobForm","id","title","location","companyName","description","employerEmail","companyLink","postdate","owner","checkLogin","get","then","console","log","catch","findJobDetails","response","data","error","e","target","value","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function EditJob(props) {\n    const jobId = useParams().jobId;\n    const state = useSelector((state) => state);\n    const username = useSelector(state => state.username);\n    const navigate = useNavigate();\n    const [job, setJob] = useState([]);\n    const [jobForm, setJobForm] = useState({\n        id: jobId,\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n        owner: username\n    });\n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success Login\"))\n            .catch(() => navigate('/'))\n    }\n    useEffect(checkLogin, []);\n\n    function findJobDetails() {\n        axios.get('/api/jobs/find/findById/' + jobId)\n            .then(\n                response => setJobForm(response.data[0]))\n            .catch(error => console.log(\"Could not find Job\"))\n    }\n    useEffect(findJobDetails, []);\n\n\n    return (\n<>\n<section className=\"job-container\">\n            <div>\n                <h2>Edit My Posting: </h2>\n                <h5>Title:</h5>\n                <input value={jobForm.title}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        title: e.target.value\n                    })} ></input>\n                <h5>Location:</h5>\n                <input value={jobForm.location}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        location: e.target.value\n                    })} ></input>\n                <h5>Company Name:</h5>\n                <input value={jobForm.companyName}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyName: e.target.value\n                    })} ></input>\n\n                <h5>Description:</h5>\n                <input value={jobForm.description}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        description: e.target.value\n                    })} ></input>\n\n                <h5>EmployerEmail:</h5>\n                <input value={jobForm.employerEmail}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        employerEmail: e.target.value\n                    })} ></input>\n\n                <h5>Company Link:</h5>\n                <input value={jobForm.companyLink}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyLink: e.target.value\n                    })} ></input>\n            </div>\n        </section>\n\n<div>\n<button id=\"btn\" onClick={\n    () => axios.post('/api/jobs/update/' + jobId, jobForm)\n        .then(response => {\n            console.log(response);\n            navigate('/job/' + jobId);\n        })\n        .catch(error => console.error(error))\n}>\n    Submit Update\n</button >\n</div>\n   </>     \n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}