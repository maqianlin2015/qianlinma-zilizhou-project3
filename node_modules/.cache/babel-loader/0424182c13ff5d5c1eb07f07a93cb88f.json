{"ast":null,"code":"var _jsxFileName = \"/Users/zili/-zilizhou-qianlinma-project3/src/PokemonTracker.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonTracker(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [pokemonForm, setPokemonForm] = useState({\n    name: '',\n    type: '',\n    health: ''\n  });\n  const [myPokemon, setMyPokemon] = useState([]); // 用axios making api request to local node server    \n  // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n  // promise is Java scripts way of doing asynchronous data handling.\n  // 既然promise回来了，我要access to this data and use it\n  // axios有一个async问题\n\n  function getMyPokemon() {\n    axios.get('/api/pokemon/myPokemon').then(response => setMyPokemon(response.data)).catch(error => console.log(error)); // console.log(\"aynsc\");\n    // esponse.datashi yi obj\n  }\n\n  function checkLogin() {\n    axios.get('/api/users/whoIsLoggedIn').then(() => console.log(\"Success\")).catch(() => navigate('/'));\n  }\n\n  useEffect(checkLogin, []);\n  useEffect(getMyPokemon, []);\n  const pokemonElement = [];\n\n  for (let pokemon of myPokemon) {\n    pokemonElement.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pokemon.name, \" - \", pokemon.health, \" - \", pokemon.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Pokemon Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.name,\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.type,\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        type: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Health:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: pokemonForm.health,\n      type: \"number\",\n      onChange: e => setPokemonForm({ ...pokemonForm,\n        health: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => axios.post('/api/pokemon/create', pokemonForm).then(response => {\n        getMyPokemon();\n        console.log(response);\n      }).catch(error => console.error(error)),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), pokemonElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PokemonTracker, \"uNuY7LELFse9lRyjWC67A0M0/FU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PokemonTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonTracker\");","map":{"version":3,"sources":["/Users/zili/-zilizhou-qianlinma-project3/src/PokemonTracker.jsx"],"names":["axios","React","useState","useEffect","useNavigate","PokemonTracker","props","navigate","pokemonForm","setPokemonForm","name","type","health","myPokemon","setMyPokemon","getMyPokemon","get","then","response","data","catch","error","console","log","checkLogin","pokemonElement","pokemon","push","e","target","value","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}