{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/project3/src/AddJob.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddJob(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [jobForm, setJobForm] = useState({\n    title: '',\n    location: '',\n    companyName: '',\n    description: '',\n    employerEmail: '',\n    companyLink: ''\n  });\n  const [myJob, setMyJob] = useState([]); // 用axios making api request to local node server    \n  // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n  // promise is Java scripts way of doing asynchronous data handling.\n  // 既然promise回来了，我要access to this data and use it\n  // axios有一个async问题\n  // function getMyPokemon() {\n  //     axios.get('/api/job/myjob')\n  //         .then(response => setMyPokemon(response.data))\n  //         .catch(error => console.log(error));\n  // }\n  // useEffect(getMyPokemon, []);\n\n  const jobElement = [];\n\n  for (let job of myJob) {\n    jobElement.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [job.title, \" - \", job.location, \" - \", job.companyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.title,\n      onChange: e => setJobForm({ ...jobForm,\n        DataTransferItemList: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Location:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.location,\n      onChange: e => setJobForm({ ...jobForm,\n        location: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Company Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.companyName,\n      onChange: e => setJobForm({ ...jobForm,\n        companyName: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.description,\n      onChange: e => setJobForm({ ...jobForm,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"EmployerEmail:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.employerEmail,\n      onChange: e => setJobForm({ ...jobForm,\n        employerEmail: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Company Link:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: jobForm.companyLink,\n      onChange: e => setJobForm({ ...jobForm,\n        companyLink: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => axios.post('/api/jobs/create', jobForm).then(response => {\n        // getMyJob()\n        console.log(response);\n      }).catch(error => console.error(error)),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), jobElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddJob, \"HMm/ffUeMzhRuxUGikJ0aDLyack=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/project3/src/AddJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","AddJob","props","navigate","jobForm","setJobForm","title","location","companyName","description","employerEmail","companyLink","myJob","setMyJob","jobElement","job","push","e","DataTransferItemList","target","value","post","then","response","console","log","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n    });\n    const [myJob, setMyJob] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    // function getMyPokemon() {\n    //     axios.get('/api/job/myjob')\n    //         .then(response => setMyPokemon(response.data))\n    //         .catch(error => console.log(error));\n    // }\n    \n\n    // useEffect(getMyPokemon, []);\n\n\n    const jobElement = [];\n    for(let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Name:</h5>\n            <input value={jobForm.title} \n            onChange={e => setJobForm({\n                ...jobForm,\n                DataTransferItemList: e.target.value\n            })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location} \n            onChange={e => setJobForm({\n                ...jobForm,\n                location: e.target.value\n            })} ></input>\n            <h5>Company Name:</h5>\n                        <input value={jobForm.companyName} \n                        onChange={e => setJobForm({\n                            ...jobForm,\n                            companyName: e.target.value\n                        })} ></input>\n\n<h5>Description:</h5>\n            <input value={jobForm.description} \n            onChange={e => setJobForm({\n                ...jobForm,\n                description: e.target.value\n            })} ></input>\n\n<h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail} \n            onChange={e => setJobForm({\n                ...jobForm,\n                employerEmail: e.target.value\n            })} ></input>\n\n<h5>Company Link:</h5>\n            <input value={jobForm.companyLink} \n            onChange={e => setJobForm({\n                ...jobForm,\n                companyLink: e.target.value\n            })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/create', jobForm)\n                    .then(response => {\n                        // getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}