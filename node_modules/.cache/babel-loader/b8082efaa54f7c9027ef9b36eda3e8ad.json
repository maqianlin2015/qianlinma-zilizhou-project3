{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearchResult.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobSearchResult() {\n  _s();\n\n  const [selectedJob, setSelectedJob] = useState([]);\n  const jobSearchQuery = useParams().jobSearchQuery;\n\n  function findSelectedJob() {\n    axios.get('api/jobs/find/findByTitle/' + jobSearchQuery).then(response => {\n      setSelectedJob(response.data);\n    }).catch(error => console.error(error));\n  }\n\n  console.log('this is all jobs:');\n  console.log(allJob);\n  useEffect(findSelectedJob, []);\n  const jobListComponent = selectedJob.map(job => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: job.id,\n          children: [job.title, \" - \", job.location, \" - \", job.companyName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"These are search result the jobs: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), jobListComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobSearchResult, \"brHmiQAUoHwFArTP3OX0iBVua00=\", false, function () {\n  return [useParams];\n});\n\n_c = JobSearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSearchResult\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearchResult.jsx"],"names":["axios","React","useEffect","useState","Link","useParams","JobSearchResult","selectedJob","setSelectedJob","jobSearchQuery","findSelectedJob","get","then","response","data","catch","error","console","log","allJob","jobListComponent","map","job","id","title","location","companyName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMM,cAAc,GAAGJ,SAAS,GAAGI,cAAnC;;AAEA,WAASC,eAAT,GAA2B;AACvBV,IAAAA,KAAK,CAACW,GAAN,CAAU,+BAA+BF,cAAzC,EACKG,IADL,CACUC,QAAQ,IAAI;AACdL,MAAAA,cAAc,CAACK,QAAQ,CAACC,IAAV,CAAd;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAJpB;AAKH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAjB,EAAAA,SAAS,CAACQ,eAAD,EAAkB,EAAlB,CAAT;AAEA,QAAMU,gBAAgB,GAAGb,WAAW,CAACc,GAAZ,CAAgBC,GAAG,IAAI;AAC5C,wBAAQ;AAAA,6BACJ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEA,GAAG,CAACC,EAAd;AAAA,qBAAmBD,GAAG,CAACE,KAAvB,SAAiCF,GAAG,CAACG,QAArC,SAAkDH,GAAG,CAACI,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI,qBAAR;AAKH,GANwB,CAAzB;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9BuBd,e;UAEGD,S;;;KAFHC,e","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nexport default function JobSearchResult() {\n    const [selectedJob, setSelectedJob] = useState([]);\n    const jobSearchQuery = useParams().jobSearchQuery;\n\n    function findSelectedJob() {\n        axios.get('api/jobs/find/findByTitle/' + jobSearchQuery)\n            .then(response => {\n                setSelectedJob(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    console.log('this is all jobs:');\n    console.log(allJob);\n    useEffect(findSelectedJob, []);\n\n    const jobListComponent = selectedJob.map(job => {\n        return (<>\n            <p>\n                <Link to={job.id}>{job.title} - {job.location} - {job.companyName}</Link>\n            </p>\n        </>)\n    })\n\n    return (\n        <div>\n            <h1>These are search result the jobs: </h1>\n            {jobListComponent}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}