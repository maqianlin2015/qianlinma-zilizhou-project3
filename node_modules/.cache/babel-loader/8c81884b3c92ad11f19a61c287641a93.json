{"ast":null,"code":"import _objectSpread from\"/Users/michelle_ma/Desktop/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/Users/michelle_ma/Desktop/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/michelle_ma/Desktop/project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import React,{useState,useEffect}from'react';import{useNavigate}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddJob(props){var navigate=useNavigate();var _useState=useState({title:'',location:'',companyName:'',description:'',employerEmail:'',companyLink:'',postdate:''}),_useState2=_slicedToArray(_useState,2),jobForm=_useState2[0],setJobForm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),myJob=_useState4[0],setMyJob=_useState4[1];// 用axios making api request to local node server    \n// axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n// promise is Java scripts way of doing asynchronous data handling.\n// 既然promise回来了，我要access to this data and use it\n// axios有一个async问题\n// function getMyPokemon() {\n//     axios.get('/api/job/myjob')\n//         .then(response => setMyPokemon(response.data))\n//         .catch(error => console.log(error));\n// }\n// useEffect(getMyPokemon, []);\nvar jobElement=[];var _iterator=_createForOfIteratorHelper(myJob),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var job=_step.value;jobElement.push(/*#__PURE__*/_jsxs(\"div\",{children:[job.title,\" - \",job.location,\" - \",job.companyName]}));}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Title:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.title,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.location,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{location:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.companyName,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{companyName:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.description,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{description:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"EmployerEmail:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.employerEmail,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{employerEmail:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Company Link:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.companyLink,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{companyLink:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\" Post Date:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.postdate,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{postdate:e.target.value}));}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return axios.post('/api/jobs/createJob/',jobForm).then(function(response){// getMyJob()\nconsole.log(response);}).catch(function(error){return console.error(error);});},children:\"Submit\"}),jobElement]});}","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/project3/src/AddJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","AddJob","props","navigate","title","location","companyName","description","employerEmail","companyLink","postdate","jobForm","setJobForm","myJob","setMyJob","jobElement","job","push","e","target","value","post","then","response","console","log","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n    const [myJob, setMyJob] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n\n    // function getMyPokemon() {\n    //     axios.get('/api/job/myjob')\n    //         .then(response => setMyPokemon(response.data))\n    //         .catch(error => console.log(error));\n    // }\n\n\n    // useEffect(getMyPokemon, []);\n\n\n    const jobElement = [];\n    for (let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Title:</h5>\n            <input value={jobForm.title}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    title: e.target.value\n                })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    location: e.target.value\n                })} ></input>\n            <h5>Company Name:</h5>\n            <input value={jobForm.companyName}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyName: e.target.value\n                })} ></input>\n\n            <h5>Description:</h5>\n            <input value={jobForm.description}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    description: e.target.value\n                })} ></input>\n\n            <h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    employerEmail: e.target.value\n                })} ></input>\n\n            <h5>Company Link:</h5>\n            <input value={jobForm.companyLink}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyLink: e.target.value\n                })} ></input>\n\n            <h5> Post Date:</h5>\n            <input value={jobForm.postdate}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    postdate: e.target.value\n                })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/createJob/', jobForm)\n                    .then(response => {\n                        // getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}