{"ast":null,"code":"import _objectSpread from\"/Users/michelle_ma/Desktop/web-project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/michelle_ma/Desktop/web-project3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./style/LoginRegister.css\";import axios from'axios';import React,{useState,useEffect}from'react';import{useNavigate}from'react-router';import{useSelector,useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require('uuid'),uuid=_require.v4;export default function AddJob(props){var navigate=useNavigate();var username=useSelector(function(state){return state.username;});var _useState=useState(null),_useState2=_slicedToArray(_useState,2),errorMsg=_useState2[0],setError=_useState2[1];var _useState3=useState({id:uuid(),title:'',location:'',companyName:'',description:'',employerEmail:'',companyLink:null,postdate:new Date().toISOString().split(\"T\")[0],owner:username}),_useState4=_slicedToArray(_useState3,2),jobForm=_useState4[0],setJobForm=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),myJob=_useState6[0],setMyJob=_useState6[1];function createForm(){if(!jobForm){setError(\"Please fill out the form.\");return;}}function getMyJob(){axios.get('/api/jobs/findAll').then(function(response){return setMyJob(response.data);}).catch(function(error){return console.log(error);});}function checkLogin(){if(!username){navigate('/login');}else{return;}}useEffect(checkLogin,[]);useEffect(getMyJob,[]);function onSubmitAddJobButtonClick(){if(!(jobForm.title&&jobForm.location&&jobForm.companyName&&jobForm.description&&jobForm.employerEmail)){setError(\"You must fill all the fields except company link\");return;}axios.post(\"/api/jobs/create\",jobForm).then(function(response){getMyJob();navigate(\"/job/\"+jobForm.id);console.log(response);}).catch(function(error){return console.error(error);});}return/*#__PURE__*/_jsx(\"section\",{className:\"job-container\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Title:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.title,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.location,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{location:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.companyName,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{companyName:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:jobForm.description,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{description:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"EmployerEmail:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.employerEmail,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{employerEmail:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Company Link:\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"optional\",value:jobForm.companyLink,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{companyLink:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\" Post Date:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobForm.postdate,onChange:function onChange(e){return setJobForm(_objectSpread(_objectSpread({},jobForm),{},{postdate:e.target.value}));}}),/*#__PURE__*/_jsx(\"br\",{}),errorMsg,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:onSubmitAddJobButtonClick,children:\"Submit\"})]})});}","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/web-project3/src/AddJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","useSelector","useDispatch","require","uuid","v4","AddJob","props","navigate","username","state","errorMsg","setError","id","title","location","companyName","description","employerEmail","companyLink","postdate","Date","toISOString","split","owner","jobForm","setJobForm","myJob","setMyJob","createForm","getMyJob","get","then","response","data","catch","error","console","log","checkLogin","onSubmitAddJobButtonClick","post","e","target","value"],"mappings":"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","sourcesContent":["import \"./style/LoginRegister.css\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nconst { v4: uuid } = require('uuid');\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const username = useSelector(state => state.username);\n    const [errorMsg, setError] = useState(null);\n    const [jobForm, setJobForm] = useState({\n        id: uuid(),\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: null,\n        postdate: new Date().toISOString().split(\"T\")[0],\n        owner: username,\n    });\n\n    const [myJob, setMyJob] = useState([])\n\n    function createForm() {\n        if (!jobForm) {\n            setError(\"Please fill out the form.\");\n            return;\n        }\n    }\n\n    function getMyJob() {\n        axios.get('/api/jobs/findAll')\n            .then(response => setMyJob(response.data))\n            .catch(error => console.log(error));\n    }\n\n\n    function checkLogin() {\n        if (!username) {\n            navigate('/login')\n        } else {\n            return;\n        }\n    }\n\n    useEffect(checkLogin, []);\n    useEffect(getMyJob, []);\n\n    function onSubmitAddJobButtonClick() {\n        if (\n            !(\n                jobForm.title &&\n                jobForm.location &&\n                jobForm.companyName &&\n                jobForm.description &&\n                jobForm.employerEmail\n            )\n        ) {\n            setError(\"You must fill all the fields except company link\");\n            return;\n        }\n\n        axios\n            .post(\"/api/jobs/create\", jobForm)\n            .then((response) => {\n                getMyJob();\n                navigate(\"/job/\" + jobForm.id);\n                console.log(response);\n            })\n            .catch((error) => console.error(error));\n    }\n\n    return (\n        <section className=\"job-container\">\n\n            <div>\n                <h5>Title:</h5>\n                <input value={jobForm.title}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        title: e.target.value\n                    })} ></input>\n                <h5>Location:</h5>\n                <input value={jobForm.location}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        location: e.target.value\n                    })} ></input>\n                <h5>Company Name:</h5>\n                <input value={jobForm.companyName}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyName: e.target.value\n                    })} ></input>\n\n                <h5>Description:</h5>\n                <textarea value={jobForm.description}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        description: e.target.value\n                    })} ></textarea>\n\n                <h5>EmployerEmail:</h5>\n                <input value={jobForm.employerEmail}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        employerEmail: e.target.value\n                    })} ></input>\n\n                <h5>Company Link:</h5>\n                <input placeholder=\"optional\" value={jobForm.companyLink}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyLink: e.target.value\n                    })} ></input>\n\n                <h5> Post Date:</h5>\n                <input value={jobForm.postdate}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        postdate: e.target.value\n                    })} ></input>\n                <br />\n                {errorMsg}\n                <br />\n                <br />\n                <button onClick={\n                    onSubmitAddJobButtonClick\n                }>\n                    Submit\n                </button>\n            </div>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}