{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios, { Axios } from 'axios'; // import { now } from 'mongoose';\n// import { useNavigate } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [formInput, setFormInput] = useState('');\n  const [job, setJob] = useState({\n    title: 'No job selected'\n  });\n  const [errorMsg, setError] = useState(null);\n\n  function onSearchButtonClick() {\n    if (!formInput) {\n      setError(\"You must type in a job title.\");\n      return;\n    }\n\n    axios.get('/api/jobs/find/:' + formInput).then(response => setJob(response.data)).catch(error => setJob({\n      title: \"No job found\"\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [errorMsg, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: formInput,\n      onChange: e => {\n        setError(null);\n        setFormInput(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSearchButtonClick,\n      children: \"Search for Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Job Title: \", job.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BSIgOdFkTvl64bTZioVzFIuZ728=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearch.js"],"names":["useState","axios","Axios","App","formInput","setFormInput","job","setJob","title","errorMsg","setError","onSearchButtonClick","get","then","response","data","catch","error","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B,C,CACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC;AAC3BQ,IAAAA,KAAK,EAAE;AADoB,GAAD,CAA9B;AAGA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBV,QAAQ,CAAC,IAAD,CAArC;;AAEA,WAASW,mBAAT,GAA+B;AAC3B,QAAI,CAACP,SAAL,EAAgB;AACZM,MAAAA,QAAQ,CAAC,+BAAD,CAAR;AACA;AACH;;AACDT,IAAAA,KAAK,CAACW,GAAN,CAAU,qBAAqBR,SAA/B,EACKS,IADL,CACUC,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACC,IAAV,CAD5B,EAEKC,KAFL,CAEWC,KAAK,IAAIV,MAAM,CAAC;AACnBC,MAAAA,KAAK,EAAE;AADY,KAAD,CAF1B;AAKH;;AAED,sBACI;AAAA,eACKC,QADL,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEL,SAA1B;AACI,MAAA,QAAQ,EAAGc,CAAD,IAAO;AACbR,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAL,QAAAA,YAAY,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAEH;AALL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAQ,MAAA,OAAO,EAAET,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAWI;AAAA,gCACgBL,GAAG,CAACE,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApCQL,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport axios, { Axios } from 'axios';\n// import { now } from 'mongoose';\n// import { useNavigate } from 'react-router';\n\nfunction App() {\n    const [formInput, setFormInput] = useState('');\n    const [job, setJob] = useState({\n        title: 'No job selected',\n    })\n    const [errorMsg, setError] = useState(null);\n\n    function onSearchButtonClick() {\n        if (!formInput) {\n            setError(\"You must type in a job title.\");\n            return;\n        }\n        axios.get('/api/jobs/find/:' + formInput)\n            .then(response => setJob(response.data))\n            .catch(error => setJob({\n                title: \"No job found\",\n            }));\n    }\n\n    return (\n        <div>\n            {errorMsg}\n            <input type='text' value={formInput}\n                onChange={(e) => {\n                    setError(null);\n                    setFormInput(e.target.value)\n\n                }} />\n            <button onClick={onSearchButtonClick}>\n                Search for Job\n            </button>\n            <div>\n                Job Title: {job.title}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}