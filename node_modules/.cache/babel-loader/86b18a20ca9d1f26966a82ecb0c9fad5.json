{"ast":null,"code":"import _objectSpread from\"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from'axios';import React,{useState,useEffect}from'react';import{useNavigate}from'react-router';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PokemonTracker(props){var navigate=useNavigate();var _useState=useState({name:'',type:'',health:''}),_useState2=_slicedToArray(_useState,2),pokemonForm=_useState2[0],setPokemonForm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),myPokemon=_useState4[0],setMyPokemon=_useState4[1];// 用axios making api request to local node server    \n// axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n// promise is Java scripts way of doing asynchronous data handling.\n// 既然promise回来了，我要access to this data and use it\n// axios有一个async问题\nfunction getMyPokemon(){axios.get('/api/pokemon/myPokemon').then(function(response){return setMyPokemon(response.data);}).catch(function(error){return console.log(error);});// console.log(\"aynsc\");\n// esponse.datashi yi obj\n}function checkLogin(){axios.get('/api/users/whoIsLoggedIn').then(function(){return console.log(\"Success\");}).catch(function(){return navigate('/');});}// 如没有login，就来主页了\nuseEffect(checkLogin,[]);useEffect(getMyPokemon,[]);var pokemonElement=[];var _iterator=_createForOfIteratorHelper(myPokemon),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var pokemon=_step.value;pokemonElement.push(/*#__PURE__*/_jsxs(\"div\",{children:[pokemon.name,\" - \",pokemon.health,\" - \",pokemon.type]}));}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Pokemon Name:\"}),/*#__PURE__*/_jsx(\"input\",{value:pokemonForm.name,onChange:function onChange(e){return setPokemonForm(_objectSpread(_objectSpread({},pokemonForm),{},{name:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Type:\"}),/*#__PURE__*/_jsx(\"input\",{value:pokemonForm.type,onChange:function onChange(e){return setPokemonForm(_objectSpread(_objectSpread({},pokemonForm),{},{type:e.target.value}));}}),/*#__PURE__*/_jsx(\"h5\",{children:\"Health:\"}),/*#__PURE__*/_jsx(\"input\",{value:pokemonForm.health,type:\"number\",onChange:function onChange(e){return setPokemonForm(_objectSpread(_objectSpread({},pokemonForm),{},{health:e.target.value}));}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return axios.post('/api/pokemon/create',pokemonForm).then(function(response){getMyPokemon();console.log(response);}).catch(function(error){return console.error(error);});},children:\"Submit\"}),pokemonElement]});}","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/src/PokemonTracker.jsx"],"names":["axios","React","useState","useEffect","useNavigate","PokemonTracker","props","navigate","name","type","health","pokemonForm","setPokemonForm","myPokemon","setMyPokemon","getMyPokemon","get","then","response","data","catch","error","console","log","checkLogin","pokemonElement","pokemon","push","e","target","value","post"],"mappings":"8hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,cAA5B,C,wFAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC1C,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,cAAsCF,QAAQ,CAAC,CAC3CM,IAAI,CAAE,EADqC,CAE3CC,IAAI,CAAE,EAFqC,CAG3CC,MAAM,CAAE,EAHmC,CAAD,CAA9C,wCAAOC,WAAP,eAAoBC,cAApB,eAKA,eAAkCV,QAAQ,CAAC,EAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eAEA;AACA;AACA;AACA;AAEA;AAEA,QAASC,CAAAA,YAAT,EAAwB,CACpBf,KAAK,CAACgB,GAAN,CAAU,wBAAV,EACKC,IADL,CACU,SAAAC,QAAQ,QAAIJ,CAAAA,YAAY,CAACI,QAAQ,CAACC,IAAV,CAAhB,EADlB,EAEKC,KAFL,CAEW,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EAFhB,EAGA;AACA;AAEH,CAGD,QAASG,CAAAA,UAAT,EAAsB,CAClBxB,KAAK,CAACgB,GAAN,CAAU,0BAAV,EACKC,IADL,CACU,iBAAMK,CAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN,EADV,EAEKH,KAFL,CAEW,iBAAMb,CAAAA,QAAQ,CAAC,GAAD,CAAd,EAFX,EAGH,CACD;AACAJ,SAAS,CAACqB,UAAD,CAAa,EAAb,CAAT,CAEArB,SAAS,CAACY,YAAD,CAAe,EAAf,CAAT,CAGA,GAAMU,CAAAA,cAAc,CAAG,EAAvB,CArC0C,yCAsCvBZ,SAtCuB,YAsC1C,+CAA8B,IAAtBa,CAAAA,OAAsB,aAC1BD,cAAc,CAACE,IAAf,cAAoB,uBAAMD,OAAO,CAAClB,IAAd,OAAuBkB,OAAO,CAAChB,MAA/B,OAA0CgB,OAAO,CAACjB,IAAlD,GAApB,EACH,CAxCyC,qDA2C1C,mBACI,oCACI,qCADJ,cAEI,cAAO,KAAK,CAAEE,WAAW,CAACH,IAA1B,CACA,QAAQ,CAAE,kBAAAoB,CAAC,QAAIhB,CAAAA,cAAc,gCACtBD,WADsB,MAEzBH,IAAI,CAAEoB,CAAC,CAACC,MAAF,CAASC,KAFU,GAAlB,EADX,EAFJ,cAOI,6BAPJ,cAQI,cAAO,KAAK,CAAEnB,WAAW,CAACF,IAA1B,CACA,QAAQ,CAAE,kBAAAmB,CAAC,QAAIhB,CAAAA,cAAc,gCACtBD,WADsB,MAEzBF,IAAI,CAAEmB,CAAC,CAACC,MAAF,CAASC,KAFU,GAAlB,EADX,EARJ,cAaI,+BAbJ,cAcI,cAAO,KAAK,CAAEnB,WAAW,CAACD,MAA1B,CAAkC,IAAI,CAAC,QAAvC,CACA,QAAQ,CAAE,kBAAAkB,CAAC,QAAIhB,CAAAA,cAAc,gCACtBD,WADsB,MAEzBD,MAAM,CAAEkB,CAAC,CAACC,MAAF,CAASC,KAFQ,GAAlB,EADX,EAdJ,cAmBI,eAAQ,OAAO,CACX,yBAAM9B,CAAAA,KAAK,CAAC+B,IAAN,CAAW,qBAAX,CAAkCpB,WAAlC,EACDM,IADC,CACI,SAAAC,QAAQ,CAAI,CACdH,YAAY,GACZO,OAAO,CAACC,GAAR,CAAYL,QAAZ,EACH,CAJC,EAKDE,KALC,CAKK,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ,EALV,CAAN,EADJ,oBAnBJ,CA6BKI,cA7BL,GADJ,CAmCH","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    // 如没有login，就来主页了\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}